<%- include("_header") -%>
<br>
<h1>Customer Import</h1>
<h4>Total Customers: <%= totRecs %></h4>
<br>
<p>Select a file with customers for Database insert</p>
<form id="importForm" enctype="multipart/form-data" method="POST">
  <input type="file" name="filename" required />
  <p></p>
  <button type="submit" class="btn btn-primary">Import Customers</button>
</form>
<br>
<!-- Notification -->
<div id="notification" class="mt-3 text-info" style="display: none;">
  <strong>Wait for results...</strong>
</div>

<!-- Summary Section -->
<div id="importSummary" class="mt-4" style="display: none;">
  <h4>Import Summary</h4>
  <p>Total Records Processed: <span id="totalRecords"></span></p>
  <p>Records Inserted Successfully: <span id="successRecords"></span></p>
  <p>Records Not Inserted: <span id="failedRecords"></span></p>
  <h5>Errors</h5>
  <ul id="errorList" class="text-danger"></ul>
</div>

<script>
  document.getElementById("importForm").addEventListener("submit", function (e) {
    e.preventDefault();

    // Show "Wait for results" notification
    const notification = document.getElementById("notification");
    notification.style.display = "block";

    const formData = new FormData(this);

    // Send the form data via fetch
    fetch("/import", {
      method: "POST",
      body: formData
    })
      .then(response => response.json()) // Expect JSON response
      .then(result => {
        notification.style.display = "none"; // Hide notification
        const summary = document.getElementById("importSummary");
        summary.style.display = "block";

        // Update summary details
        document.getElementById("totalRecords").innerText = result.total;
        document.getElementById("successRecords").innerText = result.success;
        document.getElementById("failedRecords").innerText = result.failed;

        // Display errors, if any
        const errorList = document.getElementById("errorList");
        errorList.innerHTML = ""; // Clear previous errors
        result.errors.forEach(error => {
          const li = document.createElement("li");
          li.innerText = error;
          errorList.appendChild(li);
        });
      })
      .catch(err => {
        notification.style.display = "none";
        alert("An error occurred: " + err.message);
      });
  });
</script>

  <!-- Light and Dark Mode Functionality (For Fun) -->
  <script>
    const themeToggle = document.getElementById('theme-toggle');
    const body = document.body;

    if (localStorage.getItem('theme') === 'dark') {
      body.classList.add('dark-mode');
      themeToggle.textContent = '‚òÄÔ∏è Light Mode';
    }

    themeToggle.addEventListener('click', () => {
      body.classList.toggle('dark-mode');
      const isDarkMode = body.classList.contains('dark-mode');
      themeToggle.textContent = isDarkMode ? '‚òÄÔ∏è Light Mode' : 'üåô Dark Mode';
      localStorage.setItem('theme', isDarkMode ? 'dark' : 'light');
    });
  </script>

<%- include("_footer") -%>
